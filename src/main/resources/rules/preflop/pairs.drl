package preflop;

import rs.ac.uns.ftn.Player;
import rs.ac.uns.ftn.handranking.Card;
import rs.ac.uns.ftn.GameState.ACTIONS_BEFORE_PLAYER;
import rs.ac.uns.ftn.GameState.PLAYER_POSITION;
import java.util.Arrays;

rule "high pairs"
	when
		Player( (holeCards.firstCard.rank == Card.RANK_ACE && holeCards.secondCard.rank == Card.RANK_ACE) ||
				(holeCards.firstCard.rank == Card.RANK_KING && holeCards.secondCard.rank == Card.RANK_KING) || 
				(holeCards.firstCard.rank == Card.RANK_QUEEN && holeCards.secondCard.rank == Card.RANK_QUEEN))
	then
		System.out.println("high pairs - Raise");
end

rule "middle pairs - all players fold or one player called"
	when
		Player( (holeCards.firstCard.rank == holeCards.secondCard.rank && Arrays.asList(Card.RANK_JACK, Card.RANK_10) contains holeCards.firstCard.rank),
		        (Arrays.asList(ACTIONS_BEFORE_PLAYER.ALL_FOLD, ACTIONS_BEFORE_PLAYER.ONE_CALL) contains gameState.actionsBeforePlayer))
	then
		System.out.println("middle pairs - Raise");
end

rule "middle pairs - one player raised"
	when
		Player( (holeCards.firstCard.rank == holeCards.secondCard.rank && Arrays.asList(Card.RANK_JACK, Card.RANK_10) contains holeCards.firstCard.rank),
		        (gameState.actionsBeforePlayer == ACTIONS_BEFORE_PLAYER.ONE_RAISE))
	then
		System.out.println("middle pairs - Call 20");
end