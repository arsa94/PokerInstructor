package preflop;

import rs.ac.uns.ftn.Player;
import rs.ac.uns.ftn.handranking.Card;
import rs.ac.uns.ftn.GameState.ACTIONS_BEFORE_PLAYER;
import rs.ac.uns.ftn.GameState.PLAYER_POSITION;
import java.util.Arrays;

rule "High Pairs (AA, KK) - Not Reraised"
	when
		Player(((holeCards.firstCard.rank == Card.RANK_ACE && holeCards.secondCard.rank == Card.RANK_ACE) ||
				(holeCards.firstCard.rank == Card.RANK_KING && holeCards.secondCard.rank == Card.RANK_KING)),
				gameState.actionsBeforePlayer != ACTIONS_BEFORE_PLAYER.RE_RAISE)
	then
		System.out.println("High Pairs (AA, KK) - Not Reraised - Raise");
end

rule "High Pairs (AA, KK) - Reraised"
	when
		Player(((holeCards.firstCard.rank == Card.RANK_ACE && holeCards.secondCard.rank == Card.RANK_ACE) ||
				(holeCards.firstCard.rank == Card.RANK_KING && holeCards.secondCard.rank == Card.RANK_KING)),
				gameState.actionsBeforePlayer == ACTIONS_BEFORE_PLAYER.RE_RAISE)
	then
		System.out.println("High Pairs (AA, KK) - Reraised - Re-Raise");
end

rule "High Pairs (QQ) - Not Reraised"
	when
		Player( (holeCards.firstCard.rank == Card.RANK_QUEEN && holeCards.secondCard.rank == Card.RANK_QUEEN),
		         gameState.actionsBeforePlayer != ACTIONS_BEFORE_PLAYER.RE_RAISE)
	then
		System.out.println("High Pairs (QQ) - Not Reraised - Raise");
end

rule "High Pairs (QQ) - Reraised"
	when
		Player( (holeCards.firstCard.rank == Card.RANK_QUEEN && holeCards.secondCard.rank == Card.RANK_QUEEN),
		         gameState.actionsBeforePlayer == ACTIONS_BEFORE_PLAYER.RE_RAISE)
	then
		System.out.println("High Pairs (QQ) - Reraised - Call 20");
end

rule "Middle Pairs - All players fold or one player called"
	when
		Player( (holeCards.firstCard.rank == holeCards.secondCard.rank && Arrays.asList(Card.RANK_JACK, Card.RANK_10) contains holeCards.firstCard.rank),
		        (Arrays.asList(ACTIONS_BEFORE_PLAYER.ALL_FOLD, ACTIONS_BEFORE_PLAYER.ONE_CALL) contains gameState.actionsBeforePlayer))
	then
		System.out.println("Middle Pairs - All players fold or one player called - Raise");
end

rule "Middle Pairs - One player raised or Reraised"
	when
		Player( (holeCards.firstCard.rank == holeCards.secondCard.rank && Arrays.asList(Card.RANK_JACK, Card.RANK_10) contains holeCards.firstCard.rank),
		        (Arrays.asList(ACTIONS_BEFORE_PLAYER.ONE_RAISE, ACTIONS_BEFORE_PLAYER.RE_RAISE) contains gameState.actionsBeforePlayer))
	then
		System.out.println("Middle Pairs - One player raised or Reraised - Call 20");
end

rule "Low Pairs - All players Fold - Early position"
	when
		Player( (holeCards.firstCard.rank == holeCards.secondCard.rank &&
                 holeCards.firstCard.rank <= Card.RANK_9 && holeCards.firstCard.rank >= Card.RANK_2),
                (gameState.actionsBeforePlayer == ACTIONS_BEFORE_PLAYER.ALL_FOLD),
                (gameState.playerPosition == PLAYER_POSITION.EARLY))
	then
	    System.out.println("Low Pairs - All players fold - Early position - Fold");
end

rule "Low Pairs - All players Fold - Mid or Blinds position"
	when
		Player( (holeCards.firstCard.rank == holeCards.secondCard.rank &&
                 holeCards.firstCard.rank <= Card.RANK_9 && holeCards.firstCard.rank >= Card.RANK_2),
                (gameState.actionsBeforePlayer == ACTIONS_BEFORE_PLAYER.ALL_FOLD),
                (gameState.playerPosition == PLAYER_POSITION.MID || gameState.playerPosition == PLAYER_POSITION.BLINDS ))
	then
	    System.out.println("Low Pairs - All players fold - Mid or Blinds position - Call");
end

rule "Low Pairs - All players Fold - Late position"
	when
		Player( (holeCards.firstCard.rank == holeCards.secondCard.rank &&
                 holeCards.firstCard.rank <= Card.RANK_9 && holeCards.firstCard.rank >= Card.RANK_2),
                (gameState.actionsBeforePlayer == ACTIONS_BEFORE_PLAYER.ALL_FOLD),
                (gameState.playerPosition == PLAYER_POSITION.LATE))
	then
	    System.out.println("Low Pairs - All players fold - Late position - Raise");
end

rule "Low Pairs - One player called - Early position"
	when
		Player( (holeCards.firstCard.rank == holeCards.secondCard.rank &&
                 holeCards.firstCard.rank <= Card.RANK_9 && holeCards.firstCard.rank >= Card.RANK_2),
                (gameState.actionsBeforePlayer == ACTIONS_BEFORE_PLAYER.ONE_CALL),
                (gameState.playerPosition == PLAYER_POSITION.EARLY))
	then
	    System.out.println("Low Pairs - One player called - Early position - Fold");
end

rule "Low Pairs - One player called - Not Early position"
	when
		Player( (holeCards.firstCard.rank == holeCards.secondCard.rank &&
                 holeCards.firstCard.rank <= Card.RANK_9 && holeCards.firstCard.rank >= Card.RANK_2),
                (gameState.actionsBeforePlayer == ACTIONS_BEFORE_PLAYER.ONE_CALL),
                (gameState.playerPosition != PLAYER_POSITION.EARLY))
	then
	    System.out.println("Low Pairs - One player called - Not Early position - Call");
end

rule "Low Pairs - One player raised or Reraised"
	when
		Player( (holeCards.firstCard.rank == holeCards.secondCard.rank &&
                 holeCards.firstCard.rank <= Card.RANK_9 && holeCards.firstCard.rank >= Card.RANK_2),
                (Arrays.asList(ACTIONS_BEFORE_PLAYER.ONE_RAISE, ACTIONS_BEFORE_PLAYER.RE_RAISE) contains gameState.actionsBeforePlayer))
	then
	    System.out.println("Low Pairs - One player raised or Reraised - Call 20");
end
